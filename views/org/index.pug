extends layout.pug

include ../_includes/repositories.pug
include ../_includes/packages.pug

block content
  style.
    .avatar-container {
      position: relative
    }

    .avatar-initials {
      filter: brightness(65%);
      background-color: transparent;
    }

    .avatar-picture {
      position: absolute;
    }

  div.row.row-cards
    div.col-4
      div.card
        div.card-body
          canvas#managers

    div.col-4
      div.card
        div.card-body
          canvas#modes

    div.col-4
      div.card
        div.card-body
          canvas#types

  div.row
    div.col-12.col-lg-6
      div.card
        div.card-header
          h4.card-title Fat Repositories

          div.card-options
            a.btn.btn-secondary.btn-sm(href=`/${org}/repositories`) View All

        +repositories(repositories)

    div.col-12.col-lg-6
      div.card
        div.card-header
          h4.card-title Top used Packages

          div.card-options
            a.btn.btn-secondary.btn-sm(href=`/${org}/dependencies`) View All

        +packages(packages)

  script.
    var stats = !{JSON.stringify(stats)}

    require(['chart', 'jquery'], function(Chart, $) {
      $(document).ready(function () {
        new Chart(document.getElementById('managers'), {
          type: 'bar',
          data: {
            labels: stats.managers.map(item => item.name),
            datasets: [{
              label: '# of packages',
              data: stats.managers.map(item => item.count),
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              yAxes: [{
                ticks: {
                  beginAtZero:true
                }
              }]
            }
          }
        })

        new Chart(document.getElementById('modes'), {
          type: 'bar',
          data: {
            labels: stats.modes.npm.map(item => item.name),
            datasets: [{
              label: '# of packages',
              data: stats.modes.npm.map(item => item.count),
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              yAxes: [{
                ticks: {
                  beginAtZero:true
                }
              }]
            }
          }
        })

        new Chart(document.getElementById('types'), {
          type: 'pie',
          data: {
            labels: stats.types.npm.map(item => item.name),
            datasets: [{
              label: '# of packages',
              data: stats.types.npm.map(item => item.count),
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              yAxes: [{
                ticks: {
                  beginAtZero:true
                }
              }]
            }
          }
        })
      })
    })
